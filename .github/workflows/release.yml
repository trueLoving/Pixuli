name: 发布 Pixuli

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本 (例如: 1.0.0)'
        required: true
        default: '1.0.0'

env:
  NODE_VERSION: '22'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: linux
          - os: windows-latest
            platform: win
            artifact_name: win
          - os: macos-latest
            platform: mac
            artifact_name: mac

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 构建应用
        run: pnpm run build

      - name: 构建 Electron 应用
        run: pnpm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: pixuli-${{ matrix.artifact_name }}-${{ github.ref_name }}
          path: |
            release/**/*
            !release/**/*.blockmap

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 创建发布
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Pixuli ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## 新版本发布 🎉
            
            ### 版本: ${{ github.ref_name }}
            
            ### 更新内容
            - 修复已知问题
            - 性能优化
            - 新功能添加
            
            ### 下载
            请根据您的操作系统选择相应的安装包：
            
            **Windows**: 下载 `.exe` 文件
            **macOS**: 下载 `.dmg` 文件  
            **Linux**: 下载 `.AppImage` 文件 